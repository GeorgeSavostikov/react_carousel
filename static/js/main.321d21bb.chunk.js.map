{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","offSet","setOffSet","maxOffSet","length","isDisabledLeft","isDisabledRight","className","style","width","transform","transition","map","image","i","src","alt","height","type","onClick","disabled","App","data","setData","min","max","value","onChange","event","currentData","target","ReactDOM","render","document","getElementById"],"mappings":"gOAuGeA,EA3FmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAYT,EAAOU,OAASR,EAC5BS,EAA4B,IAAXJ,IAAiBF,EAClCO,EAAkBL,IAAWE,IAAcJ,EAsBjD,OACE,sBAAKQ,UAAU,WAAf,UACE,qBACEA,UAAU,mBACVC,MAAO,CACLC,MAAM,GAAD,OAAKb,EAAYC,EAAjB,OAHT,SAME,oBACEU,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,QAAkBT,EAASJ,EAA3B,OACTc,WAAW,aAAD,OAAeb,EAAf,OAJd,SAOGJ,EAAOkB,KAAK,SAACC,EAAOC,GAAR,OACX,oBACEP,UAAU,oBADZ,SAIE,qBACEA,UAAU,kBACVQ,IAAKF,EACLG,IAAG,UAAKF,EAAI,GACZN,MAAO,CACLS,OAAO,GAAD,OAAKpB,EAAL,MACNY,MAAM,GAAD,OAAKZ,EAAL,UARJgB,UAgBb,sBAAKN,UAAU,iBAAf,UACE,wBACEA,UAAU,wBACVW,KAAK,SACLC,QA1DU,WAChB,OAEMjB,EADO,IAAXD,EACcA,EAASN,GAAQ,EACzBM,EAASN,EACT,EACQQ,IAqDViB,SAAUf,EAJZ,kBASA,wBACEE,UAAU,yBACVW,KAAK,SACLC,QAzDW,WACjB,OAEMjB,EADJD,IAAWE,EACGF,EAASN,GAAQQ,EACzBF,EAASN,EACTQ,EACQ,IAoDViB,SAAUd,EAJZ,yBCsDOe,EApIO,WACpB,IAAM3B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAAwBM,mBAAgB,CACtCL,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,KACnBC,UAAU,IALZ,mBAAOuB,EAAP,KAAaC,EAAb,KASE5B,EAKE2B,EALF3B,KACAC,EAIE0B,EAJF1B,UACAC,EAGEyB,EAHFzB,UACAC,EAEEwB,EAFFxB,kBACAC,EACEuB,EADFvB,SAiBF,OACE,sBAAKQ,UAAU,MAAf,UAEE,qBAAIA,UAAU,cAAd,2BAA2Cb,EAAOU,OAAlD,aACA,sBAAKG,UAAU,YAAf,UACE,wBAAOA,UAAU,aAAjB,wBAEE,uBACEA,UAAU,aACVW,KAAK,SACLM,IAAK,GACLC,IAAK,IACL9B,KAAM,GACN+B,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAWL,GAAQ,SAAAM,GAAW,kCACnCA,GADmC,IAEtChC,WAAY+B,EAAME,OAAOJ,iBAK/B,wBAAOnB,UAAU,aAAjB,wBAEE,uBACEA,UAAU,aACVW,KAAK,SACLM,IAAK,EACLC,IAAK/B,EAAOU,OACZT,KAAM,EACN+B,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAWL,GAAQ,SAAAM,GAAW,kCACnCA,GADmC,IAEtCjC,WAAYgC,EAAME,OAAOJ,iBAK/B,wBAAOnB,UAAU,aAAjB,gCAEE,uBACEA,UAAU,aACVW,KAAK,SACLM,IAAK,IACLE,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAWL,GAAQ,SAAAM,GAAW,kCACnCA,GADmC,IAEtC/B,mBAAoB8B,EAAME,OAAOJ,iBAKvC,wBAAOnB,UAAU,aAAjB,sBAEE,uBACEA,UAAU,aACVW,KAAK,WACLS,SAtEV,WACEJ,GAAQ,SAAAM,GAAW,kCACdA,GADc,IAEjB9B,UAAU,QAGK,IAAbA,GACFwB,GAAQ,SAAAM,GAAW,kCACdA,GADc,IAEjB9B,UAAU,aAiEV,wBAAOQ,UAAU,aAAjB,kBAEE,uBACEA,UAAU,aACVW,KAAK,SACLM,IAAK,EACLC,IAAK/B,EAAOU,OACZsB,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAWL,GAAQ,SAAAM,GAAW,kCACnCA,GADmC,IAEtClC,MAAOiC,EAAME,OAAOJ,oBAM5B,cAAC,EAAD,CACEhC,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,QCvIlBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.321d21bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [offSet, setOffSet] = useState(0);\n\n  const maxOffSet = images.length - frameSize;\n  const isDisabledLeft = offSet === 0 && !infinite;\n  const isDisabledRight = offSet === maxOffSet && !infinite;\n\n  const hadleLeft = () => {\n    return (\n      offSet !== 0\n        ? setOffSet(offSet - step >= 0\n          ? offSet - step\n          : 0)\n        : setOffSet(maxOffSet)\n    );\n  };\n\n  const hadleRight = () => {\n    return (\n      offSet !== maxOffSet\n        ? setOffSet(offSet + step <= maxOffSet\n          ? offSet + step\n          : maxOffSet)\n        : setOffSet(0)\n    );\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__window\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-(offSet * itemWidth)}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map(((image, i) => (\n            <li\n              className=\"Carousel__element\"\n              key={image}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={image}\n                alt={`${i + 1}`}\n                style={{\n                  height: `${itemWidth}px`,\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          )))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__menu\">\n        <button\n          className=\"Carousel__button left\"\n          type=\"button\"\n          onClick={hadleLeft}\n          disabled={isDisabledLeft}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button right\"\n          type=\"button\"\n          onClick={hadleRight}\n          disabled={isDisabledRight}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst App: React.FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [data, setData] = useState<State>({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1080,\n    infinite: false,\n  });\n\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = data;\n\n  function checkInfinite() {\n    setData(currentData => ({\n      ...currentData,\n      infinite: true,\n    }));\n\n    if (infinite === true) {\n      setData(currentData => ({\n        ...currentData,\n        infinite: false,\n      }));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className=\"App__header\">Carousel with {images.length} images</h1>\n      <div className=\"App__list\">\n        <label className=\"App__label\">\n          Item width:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min={50}\n            max={390}\n            step={10}\n            value={itemWidth}\n            onChange={(event) => setData(currentData => ({\n              ...currentData,\n              itemWidth: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Frame size:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min={1}\n            max={images.length}\n            step={1}\n            value={frameSize}\n            onChange={(event) => setData(currentData => ({\n              ...currentData,\n              frameSize: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Animation Duration:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min={1000}\n            value={animationDuration}\n            onChange={(event) => setData(currentData => ({\n              ...currentData,\n              animationDuration: +event.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Infinite:\n          <input\n            className=\"App__input\"\n            type=\"checkbox\"\n            onChange={checkInfinite}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Step:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min={1}\n            max={images.length}\n            value={step}\n            onChange={(event) => setData(currentData => ({\n              ...currentData,\n              step: +event.target.value,\n            }))}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}